0. MySQL Workbench

00. A) Data type in MySQL and 
    B) C..R..U..D with RELATIONSHIP?

HOW DO I:------
00. Change the Database name
01. Show Table Details?
02. Rename a Table Name?
03. Rename a column Name?

04. Add (a) new column and  (b)Primary Key?
05. Drop Primary Key?
06. Add Foreign Key?
07. Drop Foreign Key?

08. Add constraints Like UNIQUE/CHECK.
09. Drop constraints Like UNIQUE/INDEX/CHECK?
10. Add Auto-Increment?
11. Remove Auto-Increment?

12. Change the data type for a column? example: timestamp to varchar.

============================================


---------------------0. MySQL Workbench----------------------
Code and Press: Ctrl+Enter

CREATE DATABASE IF NOT EXISTS my_database;  -- Creates the database if it doesn't exist

USE my_database; -- Selects the database to use

CREATE TABLE IF NOT EXISTS my_table (
    id INT AUTO_INCREMENT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    email VARCHAR(255) UNIQUE,
    password VARCHAR(255) NOT NULL
);


INSERT INTO user_info (name, email, password) VALUES
('Alice Smith', 'alice.smith@example.com', 'Pubali@123'),
('Bob Johnson', 'bob.johnson@example.com', 'Pubali@123'),
('Charlie Brown', 'charlie.brown@example.com', 'Pubali@123'),
('David Lee', 'david.lee@example.com', 'Pubali@123');






========================== 00. Data type in MySQL C..R..U..D with RELATIONSHIP? ==========================
TEXT vs VARCHAR=
TEXT can store bigger amounts of data up to a maximum of 4 gigabytes ( 2 3 2 − 1 2^{32}-1 232−1) characters, 
VARCHAR can store strings of variable length up to 65,535 characters.

------------
Type	Length (In Bytes)	
-------------------------
TINYINT	   1	
SMALLINT   2	
MEDIUMINT  3	
INT        4	
BIGINT	   8
-
FLOAT	   4
DOUBLE     8
**The FLOAT and DOUBLE types represent approximate numeric data values.

-------------
BOOLEAN:-- it create TINYINT(1) in Table Data Type
MySQL stores the Boolean value in the table as an integer. To demonstrate this, let’s look at the following tasks table:
CREATE TABLE tasks (
    id INT PRIMARY KEY AUTO_INCREMENT,
    title VARCHAR(255) NOT NULL,
    completed BOOLEAN
);

--------
ENUM:
A string object whose value is chosen from a list of values given at the time of table creation. For example -
CREATE TABLE length (  length ENUM('small', 'medium', 'large') ); 

==================================

DROP TABLE IF EXISTS `users`;

CREATE TABLE `users` (
  `id` bigint(20) AUTO_INCREMENT PRIMARY KEY,
  `name` varchar(100) DEFAULT NULL,
  `username` varchar(50) NOT NULL,
  `profile_image` varchar(255) DEFAULT NULL,
  `email` varchar(100) NOT NULL,
  `password` varchar(255) NOT NULL,
  `phone` varchar(11) DEFAULT NULL,
  `is_role` tinyint(4) DEFAULT 1 COMMENT '1:admin, 0:user',
  `status` tinyint(4) DEFAULT 0 COMMENT '0:inactive, not verified',
  `email_verified_at` timestamp NULL DEFAULT NULL,
  `remember_token` varchar(100) DEFAULT NULL,
  `created_at` timestamp NULL DEFAULT NULL,
  `updated_at` timestamp NULL DEFAULT NULL
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

CREATE TABLE category1( id INT AUTO_INCREMENT PRIMARY KEY, 
                       catTitle VARCHAR(50) NOT NULL UNIQUE, 
                       catName VARCHAR(255) NOT NULL
                     );


CREATE TABLE posts( id INT AUTO_INCREMENT PRIMARY KEY, 
                    postTitle VARCHAR(50) NOT NULL UNIQUE,
                    postName VARCHAR(255) NOT NULL,
		    userId INT(2),
		    catId INT(2), 
  		    CONSTRAINT fk_userId FOREIGN KEY (userId) REFERENCES users(id)
		    ON DELETE CASCADE ON UPDATE CASCADE,
		    CONSTRAINT fk_catId FOREIGN KEY (catId) REFERENCES category(id)
                  );


-------
INSERT INTO posts( fullName, userName, userRole) VALUES
('Muhammad Mahadi Hasan', 'mmahadi', 1),
-------
UPDATE table_name
SET column1 = value1, column2 = value2, ...
WHERE condition;
-------
DELETE FROM table_name WHERE condition;


----------------------
00. Change the Database name
------------------------
RENAME DATABASE old_database_name 
TO new_database_name;

01. Table Details:
------------------
DESC Customer;
DESCRIBE Customer;

SHOW INDEX FROM tblName          *Check index(key_name/foreign key name):


02. Rename a Table Name:
------------------------
ALTER TABLE OldTableName
RENAME TO NewTableName;


03. Rename a column Name:
-------------------------
ALTER TABLE tblName 
CHANGE oldColName newColName INT(2) null;


04. Add (a)New Column and (b)Primary Key:
--------------------
(a) ALTER TABLE table_name ADD COLUMN column_name data_type [constraint];
(b) ALTER TABLE posts ADD PRIMARY KEY('id');

05. Drop Primary Key:
---------------------
ALTER TABLE posts 
DROP PRIMARY KEY;


06. Add Foreign Key:
---------------------
ALTER TABLE tblName
ADD CONSTRAINT fk_user_id 
FOREIGN KEY (tbl_col_name) REFERENCES ref_tbl(ref_tbl_col)
ON DELETE CASCADE ON UPDATE CASCADE,


07. Drop Foreign Key:
---------------------
ALTER TABLE posts 
DROP FOREIGN KEY fk_user_id


08. Add constraint Like UNIQUE/CHECK:
--------------------------------------
ALTER TABLE tblName
ADD UNIQUE/INDEX ID;
or
ADD UNIQUE/INDEX (colName1, colName2);
or
ADD CONSTRAINT cat_Title UNIQUE (colName)
or
ADD UNIQUE constraintName(colName)


09. Drop constraint Like UNIQUE/INDEX/CHECK:
--------------------------------------------
ALTER TABLE tblName
DROP INDEX constraintName     **A UNIQUE constraint is also an INDEX.


10. Add Auto-Increment:
-----------------------
ALTER TABLE posts CHANGE id id INT(11) NOT NULL AUTO_INCREMENT;


11. Remove Auto-Increment:
-------------------------
ALTER TABLE posts CHANGE id id INT(11) NOT NULL;


12.  change the data type for a column? example: timestamp to varchar.
----------------------------------------------------------------------
ALTER TABLE signup MODIFY dob varchar(50);






-



